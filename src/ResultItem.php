<?php

/*
 * This file is part of the Spress\Import.
 *
 * (c) YoSymfony <http://github.com/yosymfony>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Spress\Import;

/**
 * Represents a imported item.
 *
 * @author Victor Puertas <vpgugr@gmail.com>
 */
class ResultItem
{
    private $sourcePermalink;
    private $relativePath;
    private $message;
    private $content;
    private $error = false;
    private $existsFile = false;

    /**
     * Constructor.
     *
     * @param string $sourcePermalink      The source Permalink of the item.
     * @param string $content              The content adapted to Spress.
     * @param bool   $existsFilePreviously Indicates if there is a file previously.
     */
    public function __construct($sourcePermalink, $content = '', $existsFilePreviously = false)
    {
        $this->message = '';
        $this->content = $content;
        $this->existsFile = $existsFilePreviously;
        $this->sourcePermalink = $sourcePermalink;
    }

    /**
     * Gets the permalink generated by the source (Wordpress, Tumblr...).
     *
     * @param
     *
     * @return string
     */
    public function getSourcePermalink()
    {
        return $this->sourcePermalink;
    }

    /**
     * Sets the relative path of the imported item. This path must be relative to `src/`
     * folder.
     *
     * @param string $path The relative path.
     */
    public function setRelativePath($path)
    {
        $this->relativePath = $path;
    }

    /**
     * Gets the relative path of the imported item. This path must be relative to `src/`
     * folder.
     *
     * @return string The relative path.
     */
    public function getRelativePath()
    {
        return $this->relativePath;
    }

    /**
     * Sets the content in Spress format (front matter block and source content).
     *
     * @param string $content
     */
    public function setContent($content)
    {
        $this->content = $content;
    }

    /**
     * Gets the content in Spress format.
     *
     * @return string The content.
     */
    public function getContent()
    {
        return $this->content;
    }

    /**
     * Sets if an previous file exists in the Spress site.
     *
     * @param bool $value
     */
    public function setExistsFilePreviously($value)
    {
        $this->existsFile = $value;
    }

    /**
     * Indicates if an previous file exists in the same path.
     *
     * @return bool
     */
    public function existsFilePreviously()
    {
        return $this->existsFile;
    }

    /**
     * Sets a message describing how the importing process gone.
     *
     * @param string $message
     */
    public function setMessage($message)
    {
        $this->message = $message;
    }

    /**
     * Gets the message associated with the imported item.
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * Establishes if any error occured in the importing process.
     *
     * @param bool $value
     */
    public function setHasError($value)
    {
        $this->error = $value;
    }

    /**
     * Indicates if any error occurs in the importing process.
     *
     * @return bool
     */
    public function hasError()
    {
        return $this->error;
    }
}
